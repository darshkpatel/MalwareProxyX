#!/usr/bin/env python3
"""
MalwareProxyX
Author Darsh Patel - darshkpatel@gmail.com
"""
try:
    from mitmproxy import controller, proxy, platform
    from mitmproxy.proxy.server import ProxyServer
except ImportError:
    raise ImportError('mitmproxy isn\'t installed. You must install mitmproxy. Ideally run the setup scripts again')

import os
import logging
import sys
import subprocess

class MalwareProxyX:
    logger = logging.getLogger('MalwareProxyX')
    logging.basicConfig(level=logging.DEBUG)

    def __init__(self):
        self.logger.info("Initializing MalwareProxyX")
        self.pre_run_checks()

    def pre_run_checks(self) -> None:
        self.logger.info("Running Pre Run Checks")
        if os.name == 'nt':
            self.logger.warning("Windows isn't currently supported")
            sys.exit(1)

        self.logger.info("Verifying IP Forwarding Support")
        try:
            if sys.platform == "darwin":
                if '0' in subprocess.check_output(["sysctl", "net.inet.ip.forwarding"], encoding="UTF-8").strip():
                    self.logger.warning(
                        "net.inet.ip.forwarding is not enabled \n Use: sysctl net.inet.ip.forwarding=1 to enable it")
                    sys.exit(1)
            elif sys.platform.startswith("linux"):
                if subprocess.check_output(["cat", "/proc/sys/net/ipv4/ip_forward"], encoding="UTF-8").strip() != "1":
                    self.logger.warning(
                        "ip forwarding is not enabled \n Use: echo 1 > /proc/sys/net/ipv4/ip_forward to enable it")
                    sys.exit(1)
        except Exception as e:
            self.logger.exception(e)
            sys.exit(1)


if __name__ == "__main__":
    MalwareProxyX()
